package com.jhw.swing.material.standards.example;

import java.awt.Color;
import java.awt.GridLayout;
import java.lang.reflect.Field;
import java.lang.reflect.Modifier;
import java.util.Random;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import com.jhw.swing.material.standards.MaterialColors;
import java.awt.BorderLayout;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

/**
 *
 * @author Jesus Hernandez Barrios (jhernandezb96@gmail.com)
 */
public class MATERIAL_COLORS_EXAMPLE extends javax.swing.JFrame {

    public static final Field[] fields = MaterialColors.class.getDeclaredFields();

    public static Color getRandomColor() {
        Color c = null;
        for (int i = 0; i < 1000; i++) {
            try {
                c = (Color) fields[new Random().nextInt(fields.length)].get(null);
                return c;
            } catch (Exception e) {
            }
        }
        return MaterialColors.WHITE;
    }

    public MATERIAL_COLORS_EXAMPLE() {
        initComponents();

        this.panelBackground.setLayout(new GridLayout(0, 14));

        for (Field field : fields) {
            if (Modifier.isStatic(field.getModifiers())
                    && Color.class.isAssignableFrom(field.getType())) {
                try {
                    Color c = (Color) field.get(null);
                    String name = field.getName();

                    JPanel mp = new JPanel();
                    mp.setBackground(c);
                    mp.setToolTipText(name);
                    this.panelBackground.add(mp);

                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        }
        System.out.println("done");
        this.validate();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);//maximize the window

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//
    private void initComponents() {
        panelBackground = new JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        this.setLayout(new BorderLayout());
        this.add(panelBackground);

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws UnsupportedLookAndFeelException {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MATERIAL_COLORS_EXAMPLE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//:variables
    private JPanel panelBackground;
    // End of variables declaration                   

}
