/*
 * Copyright 2021 Root101 (jhernandezb96@gmail.com, +53-5-426-8660).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Or read it directly from LICENCE.txt file at the root of this project.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.root101.swing.material.standards.example;

import java.awt.GridLayout;
import java.awt.image.BufferedImage;
import java.lang.reflect.Field;
import java.lang.reflect.Modifier;
import javax.swing.ImageIcon;
import javax.swing.UnsupportedLookAndFeelException;
import com.root101.swing.material.standards.MaterialImages;
import java.awt.BorderLayout;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author Root101 (jhernandezb96@gmail.com, +53-5-426-8660)
 * @author JesusHdezWaterloo@Github
 */
public class MATERIAL_IMAGES_EXAMPLE extends javax.swing.JFrame {

    Field[] fields = MaterialImages.class.getDeclaredFields();

    public MATERIAL_IMAGES_EXAMPLE() {
        initComponents();

        this.panelBack.setLayout(new GridLayout(0, 10));

        for (Field field : fields) {
            if (Modifier.isStatic(field.getModifiers())
                    && BufferedImage.class.isAssignableFrom(field.getType())) {
                try {
                    ImageIcon im = new ImageIcon((BufferedImage) field.get(null));
                    String name = field.getName();

                    JLabel mp = new JLabel();
                    mp.setIcon(im);
                    mp.setToolTipText(name);
                    this.panelBack.add(mp);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        }
        System.out.println("done");
        this.validate();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);//maximize the window

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//
    private void initComponents() {

        panelBack = new JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        this.setLayout(new BorderLayout());
        this.add(panelBack);

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws UnsupportedLookAndFeelException {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MATERIAL_IMAGES_EXAMPLE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//:variables
    private JPanel panelBack;
    // End of variables declaration                   

}
